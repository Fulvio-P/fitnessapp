{
  "openapi": "3.0.0",
  "info": {
    "title": "FitnessApp-francesco",
    "version": "1.0",
    "license": {
      "name": "MIT"
    },
    "description": "lorem ipsum",
    "contact": {
      "name": "Francesco"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operazioni di autenticazione"
    },
    {
      "name": "calories",
      "description": "Dati sulle calorie ingerite e bruciate"
    },
    {
      "name": "weight",
      "description": "Dati e operazioni sul peso corporeo dell'utente"
    },
    {
      "name": "food",
      "description": "Dati e operazioni sui cibi consumati dall'utente"
    }
  ],
  "paths": {
    "/api/user/register": {
      "post": {
        "summary": "Registra nuovo utente",
        "operationId": "post-api-user-register",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Utente già registrato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "description": "Registra un nuovo utente con username e password dati nel corpo. Lo username non deve essere già stato registrato da un altro utente. Uso interno.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "username da assegnare al nuovo utente; non deve essere già stato registrato da qualcun altro"
                  },
                  "password": {
                    "type": "string",
                    "description": "password da assegnare al nuovo utente"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              },
              "examples": {
                "Esempio": {
                  "value": {
                    "username": "AkihikoSanada",
                    "password": "polydeuces"
                  }
                }
              }
            }
          },
          "description": "username e password da assegnare al nuovo utente"
        },
        "tags": [
          "user"
        ]
      }
    },
    "/api/user/login": {
      "post": {
        "summary": "Effettua login",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "bearer token"
                    }
                  },
                  "required": [
                    "token"
                  ]
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "token": "sdvjrweiot8qrqi3hf894hiu8fh389q.wieufh387gfodc8n48o.2ofh4hhweu8"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Username o password errati"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "post-api-user-login",
        "description": "Effettua il login con username e password forniti. Fornisce un bearer token da mettere nell'header Authorization di tutte le richieste che chiedono autenticazione e che dura 5 ore. Uso interno.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "lo username con cui effettuare il login"
                  },
                  "password": {
                    "type": "string",
                    "description": "la password con cui effettuare il login"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              },
              "examples": {
                "Esempio": {
                  "value": {
                    "username": "AkihikoSanada",
                    "password": "polydeuces"
                  }
                }
              }
            }
          },
          "description": "username e password con cui effettuare il login"
        }
      },
      "parameters": []
    },
    "/api/user/oauth": {
      "post": {
        "summary": "OAuth2",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "bearer token"
                    }
                  },
                  "required": [
                    "token"
                  ]
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "token": "sdvjrweiot8qrqi3hf894hiu8fh389q.wieufh387gfodc8n48o.2ofh4hhweu8"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Redirect URL fornita non combacia con quella registrata per l'applicazione"
          },
          "403": {
            "description": "Username o password errati"
          },
          "404": {
            "description": "Client ID non trovato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "post-api-user-oauth",
        "description": "Effettua il login OAuth2, secondo il flusso Implicit Code Grant. Fornire username e password dell'account da loggare, e Client ID e Redirect URL dell'applicazione. Fornisce un bearer token da mettere nell'header Authorization di tutte le richieste che chiedono autenticazione e che dura 5 ore. Uso interno.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "username dell'utente da registrare"
                  },
                  "password": {
                    "type": "string",
                    "description": "password dell'utente da registrare"
                  },
                  "id": {
                    "type": "number",
                    "description": "id dell'applicazione"
                  },
                  "redirect": {
                    "type": "string",
                    "description": "password dell'applicazione"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "id",
                  "redirect"
                ]
              },
              "examples": {
                "Esempio": {
                  "value": {
                    "username": "AkihikoSanada",
                    "password": "polydeuces",
                    "id": 45323,
                    "redirect": "http://gekkoufit.jp/fitnessapp-oauth-redirect/"
                  }
                }
              }
            }
          },
          "description": "Username e password dell'account da loggare, e Client ID e Redirect URL dell'applicazione."
        }
      },
      "parameters": []
    },
    "/api/calories": {
      "get": {
        "summary": "Ottieni dati calorie (tutti)",
        "tags": [
          "calories"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputCalorie"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "id": 1,
                      "dataPoints": [
                        {
                          "data": "2020-04-24T22:00:00.000Z",
                          "calin": 100,
                          "calout": 100,
                          "bilancio": 0
                        },
                        {
                          "data": "2020-04-25T22:00:00.000Z",
                          "calin": 50,
                          "calout": 0,
                          "bilancio": 50
                        },
                        {
                          "data": "2020-04-26T22:00:00.000Z",
                          "calin": 0,
                          "calout": 60,
                          "bilancio": -60
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-calories",
        "description": "Recupera tutti i dati delle calorie ingerite e bruciate dell'utente.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      },
      "parameters": []
    },
    "/api/calories/{data}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "data",
          "in": "path",
          "required": true,
          "description": "La data da chiedere (YYYY-MM-DD)"
        }
      ],
      "get": {
        "summary": "Ottieni dati calorie (data specifica)",
        "tags": [
          "calories"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputCalorie"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "id": 1,
                      "dataPoints": [
                        {
                          "data": "2020-04-24T22:00:00.000Z",
                          "calin": 100,
                          "calout": 100,
                          "bilancio": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato, oppure dati di questo giorno non trovati"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-calories-data",
        "description": "Recupera i dati delle calorie ingerite e bruciate dell'utente in un giorno specifico, se esitono.\nLa data deve essere in formato YYYY-MM-DD.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token"
          }
        ]
      }
    },
    "/api/calories/{from}/{to}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "from",
          "in": "path",
          "required": true,
          "description": "Inizio del range (incluso) (YYYY-MM-DD oppure -)"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "to",
          "in": "path",
          "required": true,
          "description": "Fine del range (incluso) (YYYY-MM-DD oppure -)"
        }
      ],
      "get": {
        "summary": "Ottieni dati calorie (range di date)",
        "tags": [
          "calories"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputCalorie"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "id": 1,
                      "dataPoints": [
                        {
                          "data": "2020-04-24T22:00:00.000Z",
                          "calin": 100,
                          "calout": 100,
                          "bilancio": 0
                        },
                        {
                          "data": "2020-04-25T22:00:00.000Z",
                          "calin": 50,
                          "calout": 0,
                          "bilancio": 50
                        },
                        {
                          "data": "2020-04-26T22:00:00.000Z",
                          "calin": 0,
                          "calout": 60,
                          "bilancio": -60
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-calories-from-to",
        "description": "Recupera i dati delle calorie ingerite e bruciate dell'utente relativi ai giorni compresi tra le date from e to (incluse). Usare un trattino ('-') al posto di una delle date per indicare l'assenza di un limite da quel lato.\nLe date devono essere in formato YYYY-MM-DD.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token"
          }
        ]
      }
    },
    "/api/weight": {
      "get": {
        "summary": "Ottieni misure peso (tutte)",
        "tags": [
          "weight"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputPeso"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "username": "AkihikoSanada",
                      "dataPoints": [
                        {
                          "data": "2020-04-24T22:00:00.000Z",
                          "peso": 80
                        },
                        {
                          "data": "2020-04-25T22:00:00.000Z",
                          "peso": 70
                        },
                        {
                          "data": "2020-04-26T22:00:00.000Z",
                          "peso": 75
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-weight",
        "description": "Recupera tutte le misure di peso dell'utente.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Aggiungi misura peso",
        "tags": [
          "weight"
        ],
        "responses": {
          "201": {
            "description": "Misura aggiunta con successo: essa viene restituita",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MisuraPeso"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "data": "2020-05-21T22:00:00.000Z",
                      "peso": 67
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Peso non specificato"
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato"
          },
          "409": {
            "description": "Misura peso già esistente per la data di oggi"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "post-api-weight",
        "description": "Aggiunge una misura peso relativa alla data odierna.\nDà errore se tale misura è già presente: usare una PUT per modificarla.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputPeso"
              },
              "examples": {
                "Esempio": {
                  "value": {
                    "peso": 67
                  }
                }
              }
            }
          },
          "description": "Inserire il peso misurato"
        }
      }
    },
    "/api/weight/{data}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "data",
          "in": "path",
          "required": true,
          "description": "La data bersaglio (YYYY-MM-DD)"
        }
      ],
      "get": {
        "summary": "Ottieni misura peso (data specifica)",
        "tags": [
          "weight"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputPeso"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "username": "AkihikoSanada",
                      "dataPoints": [
                        {
                          "data": "2020-04-24T22:00:00.000Z",
                          "peso": 80
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato, o misura peso del giorno specificato non trovata"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-weight-data",
        "description": "Recupera la misura peso dell'utente relativa al giorno indicato, se esiste.\nLa data deve essere in formato YYYY-MM-DD.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Modifica misura peso",
        "tags": [
          "weight"
        ],
        "responses": {
          "200": {
            "description": "Misura modificata con successo: la nuova misura viene restituita",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MisuraPeso"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "data": "2020-05-21T22:00:00.000Z",
                      "peso": 67
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Peso non specificato"
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Misura peso inesistente per la data indicata"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "put-api-weight-data",
        "description": "Modifica la misura peso relativa alla data specificata.\nSolo il peso misurato può essere modificato.\nLa data deve essere in formato YYYY-MM-DD.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputPeso"
              },
              "examples": {
                "Esempio": {
                  "value": {
                    "peso": 67
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Elimina misura peso",
        "tags": [
          "weight"
        ],
        "responses": {
          "200": {
            "description": "Misura peso eliminata con successo: essa viene restituita.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MisuraPeso"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "data": "2020-05-21T22:00:00.000Z",
                      "peso": 67
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Misura peso inesistente per la data specificata"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "delete-api-weight-data",
        "description": "Elimina la misura peso relativa alla data indicata.\nQuest'operazione non può essere annullata.\nLa data deve essere in formato YYYY-MM-DD.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      }
    },
    "/api/weight/{from}/{to}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "from",
          "in": "path",
          "required": true,
          "description": "Inizio del range (incluso) (YYYY-MM-DD oppure -)"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "to",
          "in": "path",
          "required": true,
          "description": "Fine del range (incluso) (YYYY-MM-DD oppure -)"
        }
      ],
      "get": {
        "summary": "Ottieni misure peso (range di date)",
        "tags": [
          "weight"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputPeso"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "username": "AkihikoSanada",
                      "dataPoints": [
                        {
                          "data": "2020-04-24T22:00:00.000Z",
                          "peso": 80
                        },
                        {
                          "data": "2020-04-25T22:00:00.000Z",
                          "peso": 70
                        },
                        {
                          "data": "2020-04-26T22:00:00.000Z",
                          "peso": 75
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-weight-from-to",
        "description": "Recupera le misure peso dell'utente relative ai giorni compresi tra le date from e to (incluse). Usare un trattino ('-') al posto di una delle date per indicare l'assenza di un limite da quel lato.\nLe date devono essere in formato YYYY-MM-DD.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      }
    },
    "/api/food": {
      "post": {
        "summary": "Aggiungi log cibo",
        "tags": [
          "food"
        ],
        "responses": {
          "201": {
            "description": "Cibo creato con successo: esso viene restituito.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cibo"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "created": "2020-05-22T09:01:41.718Z",
                      "data": "2020-05-21T22:00:00.000Z",
                      "nome": "riso",
                      "calin": 250,
                      "descrizione": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Non sono stati specificati tutti i parametri obbligatori nel body"
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato"
          },
          "413": {
            "description": "Una stringa è troppo lunga"
          },
          "429": {
            "description": "Rallentare le richieste a circa 1/ms"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "post-api-food",
        "description": "Aggiunge un cibo.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "Giorno in cui è stato consumato il cibo (default: oggi)"
                  },
                  "nome": {
                    "type": "string",
                    "description": "Nome del cibo consumato"
                  },
                  "calin": {
                    "type": "number",
                    "description": "Apporto calorico del cibo consumato"
                  },
                  "descrizione": {
                    "type": "string",
                    "description": "Descrizione personalizzata (max 500 caratteri) (default: niente)"
                  }
                },
                "required": [
                  "nome",
                  "calin"
                ]
              },
              "examples": {
                "Esempio 1": {
                  "value": {
                    "nome": "riso",
                    "calin": "250"
                  }
                },
                "Esempio 2": {
                  "value": {
                    "nome": "riso",
                    "calin": "250",
                    "data": "2020-04-01",
                    "descrizione": "Il sapore era strano per qualche motivo..."
                  }
                }
              }
            }
          },
          "description": "Descrivere il cibo da aggiungere."
        }
      },
      "get": {
        "summary": "Ottieni log cibo (tutti)",
        "tags": [
          "food"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputCibo"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "username": "AkihikoSanada",
                      "dataPoints": [
                        {
                          "created": "2020-04-25T00:00:00.000Z",
                          "data": "2020-04-24T22:00:00.000Z",
                          "nome": "pollo",
                          "calin": 100,
                          "descrizione": ""
                        },
                        {
                          "created": "2020-04-26T00:00:00.000Z",
                          "data": "2020-04-25T22:00:00.000Z",
                          "nome": "sushi",
                          "calin": 50,
                          "descrizione": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-food",
        "description": "Recupera tutti i cibi registrati dell'utente.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      }
    },
    "/api/food/{data}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "data",
          "in": "path",
          "required": true,
          "description": "La data da chiedere (YYYY-MM-DD)"
        }
      ],
      "get": {
        "summary": "Ottieni log cibo (data specifica)",
        "tags": [
          "food"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputCibo"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "username": "AkihikoSanada",
                      "dataPoints": [
                        {
                          "created": "2020-04-25T00:00:00.000Z",
                          "data": "2020-01-11T22:00:00.000Z",
                          "nome": "pollo",
                          "calin": 100,
                          "descrizione": ""
                        },
                        {
                          "created": "2020-04-26T00:00:00.000Z",
                          "data": "2020-01-11T22:00:00.000Z",
                          "nome": "sushi",
                          "calin": 50,
                          "descrizione": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato, o nessun cibo trovato per la data specificata"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-food-data",
        "description": "Recupera i cibi registrati dell'utente relativamente alla data specificata.\nLa data deve essere in formato YYYY-MM-DD.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      }
    },
    "/api/food/{from}/{to}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "from",
          "in": "path",
          "required": true,
          "description": "Inizio del range (incluso) (YYYY-MM-DD oppure -)"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "to",
          "in": "path",
          "required": true,
          "description": "Fine del range (incluso) (YYYY-MM-DD oppure -)"
        }
      ],
      "get": {
        "summary": "Ottieni log cibo (range di date)",
        "tags": [
          "food"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputCibo"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "username": "AkihikoSanada",
                      "dataPoints": [
                        {
                          "created": "2020-04-25T00:00:00.000Z",
                          "data": "2020-04-24T22:00:00.000Z",
                          "nome": "pollo",
                          "calin": 100,
                          "descrizione": ""
                        },
                        {
                          "created": "2020-04-26T00:00:00.000Z",
                          "data": "2020-04-25T22:00:00.000Z",
                          "nome": "sushi",
                          "calin": 50,
                          "descrizione": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Utente non trovato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "get-api-food-from-to",
        "description": "Recupera i cibi registrati dell'utente relativamente a giorni compresi tra le date from e to (incluse). Usare un trattino ('-') al posto di una delle date per indicare l'assenza di un limite da quel lato.\nLe date devono essere in formato YYYY-MM-DD.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer Token"
          }
        ]
      }
    },
    "/api/food/{ts}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "ts",
          "in": "path",
          "required": true,
          "description": "Timestamp del cibo bersaglio"
        }
      ],
      "put": {
        "summary": "Modifica log cibo",
        "tags": [
          "food"
        ],
        "responses": {
          "200": {
            "description": "Cibo modificato con successo: il nuovo record viene restituito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cibo"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "created": "2020-05-22T09:01:41.718Z",
                      "data": "2020-05-21T22:00:00.000Z",
                      "nome": "riso",
                      "calin": 250,
                      "descrizione": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Non tutti i parametri sono stati specificati"
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Nessun cibo trovato per il timestamp fornito"
          },
          "413": {
            "description": "Una delle stringhe è troppo lunga"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "put-api-food-ts",
        "description": "Modifica il cibo dell'utente identificato dal timestamp fornito.\nTutti i parametri devono essere specificati, anche quelli che non si vogliono modificare.\nSi consiglia di usare come ts il parametro created restituito dalle chiamate relative al cibo.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "Nuova data di consumazione"
                  },
                  "nome": {
                    "type": "string",
                    "description": "Nuovo nome dele cibo"
                  },
                  "calin": {
                    "type": "number",
                    "description": "Nuovo apporto calorico"
                  },
                  "descrizione": {
                    "type": "string",
                    "description": "Nuova descrizione (max 500 caratteri)"
                  }
                },
                "required": [
                  "data",
                  "nome",
                  "calin",
                  "descrizione"
                ]
              },
              "examples": {
                "Esempio": {
                  "value": {
                    "nome": "riso",
                    "calin": "250",
                    "data": "2020-04-01",
                    "descrizione": "Il sapore era strano per qualche motivo..."
                  }
                }
              }
            }
          },
          "description": "Fornire il nuovo stato del cibo."
        }
      },
      "delete": {
        "summary": "Elimina log cibo",
        "tags": [
          "food"
        ],
        "responses": {
          "200": {
            "description": "Cibo eliminato con successo: esso viene restituito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cibo"
                },
                "examples": {
                  "Esempio": {
                    "value": {
                      "created": "2020-05-22T09:01:41.718Z",
                      "data": "2020-05-21T22:00:00.000Z",
                      "nome": "riso",
                      "calin": 250,
                      "descrizione": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "token non valido o scaduto"
          },
          "404": {
            "description": "Nessun cibo trovato al timestamp indicato"
          },
          "500": {
            "description": "Errore interno"
          }
        },
        "operationId": "delete-api-food-ts",
        "description": "Elimina il cibo dell'utente identificato dal timestamp fornito.\nQuest'operazione non può essere annullata.\nSi consiglia di usare come ts il parametro created restituito dalle chiamate relative al cibo.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      }
    },
    "/api/food/off": {
      "post": {
        "summary": "Aggiungi cibo con Open Food Facts",
        "tags": [
          "food"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cibo"
                },
                "examples": {
                  "Esempio 1": {
                    "value": {
                      "created": "2020-05-22T09:06:42.967Z",
                      "data": "2020-05-21T22:00:00.000Z",
                      "nome": "Fusilli n°34",
                      "calin": 351,
                      "descrizione": "Quantità consumata: 100 unità\nCarboidrati: 69g\nProteine: 14g\nGrassi: 1.5g"
                    }
                  },
                  "Esempio 2": {
                    "value": {
                      "created": "2020-05-22T09:10:06.825Z",
                      "data": "2020-04-30T22:00:00.000Z",
                      "nome": "Fusilli n°34",
                      "calin": 175.5,
                      "descrizione": "Quantità consumata: 50 unità\nCarboidrati: 34.5g\nProteine: 7g\nGrassi: 0.75g"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Codice a barre non specificato"
          },
          "401": {
            "description": "Token non valido o scaduto"
          },
          "404": {
            "description": "Uno dei seguenti:\n - La ricerca con O.F.F. non ha prodotto risultati\n - Utente non trovato"
          },
          "429": {
            "description": "Rallentare le richieste a circa 1/ms"
          },
          "500": {
            "description": "Errore interno (tutti gli errori che avvengono durante la chiamata a O.F.F. sono inclusi in questa categoria, tra gli altri)"
          }
        },
        "operationId": "post-api-food-off",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "barcode": {
                    "type": "integer",
                    "description": "Il codice a barre del cibo consumato, usato per cercarlo su O.F.F."
                  },
                  "quantita": {
                    "type": "number",
                    "description": "Quantità consumata, in g, ml o altra unità appropriata. Usata per calcolare i dati nutrizionali della specifica consumazione. (Default: 100, o altra quantità indicata sull'etichetta)"
                  },
                  "data": {
                    "type": "string",
                    "description": "Data di consumazione del cibo. (Default: oggi)"
                  }
                },
                "required": [
                  "barcode"
                ]
              },
              "examples": {
                "Esempio 1": {
                  "value": {
                    "barcode": 8001250120342
                  }
                },
                "Esempio 2": {
                  "value": {
                    "barcode": 8001250120342,
                    "quantita": 50,
                    "data": "2020-05-01"
                  }
                }
              }
            }
          },
          "description": "Specificare il codice a barre del cibo consumato, ed opzionalmente altre proprietà"
        },
        "description": "Aggiunge un cibo per l'utente recuperando i dati nutrizionali dal database di Open Food Facts tramite REST.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Bearer hdsagfuialwsghfauilbfasdghfeuigaf203y45r89432"
            },
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer Token"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "MisuraCalorie": {
        "title": "MisuraCalorie",
        "type": "object",
        "description": "Un record che rappresenta calorie ingerite e consumate da un utente in un giorno.",
        "properties": {
          "data": {
            "type": "string",
            "description": "La data a cui fa riferimento questo record"
          },
          "calin": {
            "type": "number",
            "description": "Calorie ingerite in questo giorno"
          },
          "calout": {
            "type": "number",
            "description": "Calorie consumate in questo giorno"
          },
          "bilancio": {
            "type": "number",
            "description": "Bilancio complessivo delle calorie in questo giorno: positivo se sono state ingerite più calorie, negativo se ne sono state consumate di più.\n[calin-calout]"
          }
        },
        "required": [
          "data",
          "calin",
          "calout",
          "bilancio"
        ],
        "x-tags": [
          "calories"
        ],
        "x-examples": {
          "Esempio": {
            "data": "2020-04-24T22:00:00.000Z",
            "calin": 150,
            "calout": 100,
            "bilancio": 50
          }
        }
      },
      "MisuraPeso": {
        "title": "MisuraPeso",
        "type": "object",
        "description": "Peso misurato da un utente in un giorno.",
        "x-tags": [
          "weight"
        ],
        "properties": {
          "data": {
            "type": "string",
            "description": "La data a cui fa riferimento questa misura"
          },
          "peso": {
            "type": "number",
            "description": "La data a cui fa riferimento questa misura"
          }
        },
        "required": [
          "data",
          "peso"
        ],
        "x-examples": {
          "Esempio": {
            "data": "2020-04-24T22:00:00.000Z",
            "peso": 80
          }
        }
      },
      "InputPeso": {
        "title": "InputPeso",
        "type": "object",
        "description": "Il peso da dare come input alle chiamate POST e PUT.",
        "properties": {
          "peso": {
            "type": "string",
            "description": "Il nuovo peso misurato"
          }
        },
        "required": [
          "peso"
        ],
        "x-tags": [
          "weight"
        ],
        "x-examples": {
          "Esempio": {
            "peso": 70
          }
        }
      },
      "Cibo": {
        "title": "Cibo",
        "type": "object",
        "x-tags": [
          "food"
        ],
        "description": "Un record che rappresenta un cibo registrato dall'utente.",
        "properties": {
          "created": {
            "type": "string",
            "description": "Timestamp di creazione di questo record. Usato come identificatore del record."
          },
          "data": {
            "type": "string",
            "description": "Giorno a cui fa riferimento questo record"
          },
          "nome": {
            "type": "string",
            "description": "Nome del cibo consumato"
          },
          "calin": {
            "type": "number",
            "description": "Apporto calorico del cibo"
          },
          "descrizione": {
            "type": "string",
            "description": "Descrizione personalizzata (max 500 caratteri)"
          }
        },
        "required": [
          "created",
          "data",
          "nome",
          "calin",
          "descrizione"
        ],
        "x-examples": {
          "Esempio": {
            "created": "2020-05-22T08:36:02.411Z",
            "data": "2020-05-21T22:00:00.000Z",
            "nome": "Pasta",
            "calin": 200,
            "descrizione": "sugo di pomodori appena raccolti"
          }
        }
      },
      "OutputCalorie": {
        "title": "OutputCalorie",
        "type": "object",
        "x-tags": [
          "calories"
        ],
        "description": "L'oggetto mandato in output dalle GET sulle calorie.",
        "x-examples": {
          "Esempio": {
            "id": 1,
            "dataPoints": [
              {
                "data": "2020-04-24T22:00:00.000Z",
                "calin": 100,
                "calout": 100,
                "bilancio": 0
              },
              {
                "data": "2020-04-25T22:00:00.000Z",
                "calin": 50,
                "calout": 0,
                "bilancio": 50
              },
              {
                "data": "2020-04-26T22:00:00.000Z",
                "calin": 0,
                "calout": 60,
                "bilancio": -60
              }
            ]
          }
        },
        "properties": {
          "id": {
            "type": "number",
            "description": "Id dell'utente"
          },
          "dataPoints": {
            "type": "array",
            "description": "Array di misure di calorie",
            "items": {
              "$ref": "#/components/schemas/MisuraCalorie"
            }
          }
        },
        "required": [
          "id",
          "dataPoints"
        ]
      },
      "OutputPeso": {
        "title": "OutputPeso",
        "type": "object",
        "x-tags": [
          "weight"
        ],
        "description": "L'oggetto mandato in output dalle GET sul peso.",
        "properties": {
          "username": {
            "type": "string",
            "description": "Lo username dell'utente"
          },
          "dataPoints": {
            "type": "array",
            "description": "Array contenente le misure di peso",
            "items": {
              "$ref": "#/components/schemas/MisuraPeso"
            }
          }
        },
        "required": [
          "username",
          "dataPoints"
        ],
        "x-examples": {
          "Esempio": {
            "username": "AkihikoSanada",
            "dataPoints": [
              {
                "data": "2020-04-24T22:00:00.000Z",
                "peso": 80
              },
              {
                "data": "2020-04-25T22:00:00.000Z",
                "peso": 70
              },
              {
                "data": "2020-04-26T22:00:00.000Z",
                "peso": 75
              }
            ]
          }
        }
      },
      "OutputCibo": {
        "title": "OutputCibo",
        "type": "object",
        "x-tags": [
          "food"
        ],
        "description": "L'oggetto mandato in output dalle GET sul cibo.",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username dell'utente"
          },
          "dataPoints": {
            "type": "array",
            "description": "Array contenente i cibi richiesti",
            "items": {
              "$ref": "#/components/schemas/Cibo"
            }
          }
        },
        "required": [
          "username",
          "dataPoints"
        ],
        "x-examples": {
          "Esempio": {
            "username": "AkihikoSanada",
            "dataPoints": [
              {
                "created": "2020-04-25T00:00:00.000Z",
                "data": "2020-04-24T22:00:00.000Z",
                "nome": "pollo",
                "calin": 100,
                "descrizione": ""
              },
              {
                "created": "2020-04-26T00:00:00.000Z",
                "data": "2020-04-25T22:00:00.000Z",
                "nome": "sushi",
                "calin": 50,
                "descrizione": ""
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://localhost:5000/oauth",
            "refreshUrl": "",
            "scopes": {}
          }
        }
      },
      "Internal Token": {
        "type": "openIdConnect",
        "openIdConnectUrl": "http://localhost:5000/login",
        "description": ""
      }
    }
  },
  "security": [
    {
      "Bearer Token": []
    },
    {
      "Internal Token": []
    }
  ]
}